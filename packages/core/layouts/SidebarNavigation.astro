---
import { getCurrentArchetype } from "../utils/archetypes"
import { getCollectionEntries } from "../utils/collections-entries"
import { generateCollectionNavigation } from "../utils/navigation"

/**
 * Sidebar navigation, used to navigate between pages in the same collection.
 * Pages are fetched from the collection specified in the archetype, and grouped
 * by categories (folders in the collection, if any).
 */
const archetype = getCurrentArchetype(Astro.url)
// Fetch entries only if archetype is valid
const allEntries = archetype
  ? await getCollectionEntries(archetype.collection)
  : []
const collectionNavigation = generateCollectionNavigation(allEntries)

const isCurrentPage = (slug: string) => {
  if (!archetype) return false // Guard against null archetype
  const currentPathname = Astro.url.pathname.replace(/\/$/, "")
  const currentPage = currentPathname.split("/").pop() ?? ""
  const pathPage = slug.split("/").pop() ?? ""
  // Check if the current page is the collection index page
  if (
    pathPage === archetype.collection &&
    currentPage === archetype.collection
  ) {
    return true
  }
  // Check if the pathPage is the same as the current page
  return pathPage === currentPage && pathPage !== archetype.collection
}
---

<nav>
  {
    Object.entries(collectionNavigation).map(([category, entries]) => (
      <div class="mb-4">
        {category && (
          <h3 class="mb-1 ml-2 mt-0 text-sm font-semibold">{category}</h3>
        )}
        {entries.map((doc) => {
          const url = archetype ? `/${archetype.collection}/${doc.slug}` : "#"
          const isCurrent = isCurrentPage(doc.slug)
          return (
            <a
              href={url}
              aria-current={isCurrent ? "page" : false}
              class="flex items-center gap-1 interactive interactive-effect-nav my-1"
            >
              {doc.data.title}
            </a>
          )
        })}
      </div>
    ))
  }
</nav>
